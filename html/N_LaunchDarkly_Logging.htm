<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>LaunchDarkly.Logging Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="LaunchDarkly.Logging namespace" /><meta name="Microsoft.Help.F1" content="LaunchDarkly.Logging" /><meta name="Microsoft.Help.Id" content="N:LaunchDarkly.Logging" /><meta name="Description" content="A simple pluggable logging framework." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="LaunchDarkly.Logging" /><meta name="file" content="N_LaunchDarkly_Logging" /><meta name="guid" content="N_LaunchDarkly_Logging" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">LaunchDarkly Logging Abstraction 1.0.0<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="LaunchDarkly Logging Abstraction 1.0.0" tocid="roottoc">LaunchDarkly Logging Abstraction 1.0.0</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="Namespaces" tocid="R_Project_Documentation">Namespaces</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_LaunchDarkly_Logging.htm" title="LaunchDarkly.Logging" tocid="N_LaunchDarkly_Logging">LaunchDarkly.Logging</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_LaunchDarkly_Logging_Extensions.htm" title="Extensions Class" tocid="T_LaunchDarkly_Logging_Extensions">Extensions Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_LaunchDarkly_Logging_IChannel.htm" title="IChannel Interface" tocid="T_LaunchDarkly_Logging_IChannel">IChannel Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_LaunchDarkly_Logging_ILogAdapter.htm" title="ILogAdapter Interface" tocid="T_LaunchDarkly_Logging_ILogAdapter">ILogAdapter Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_LaunchDarkly_Logging_ILogAdapterExtensions.htm" title="ILogAdapterExtensions Class" tocid="T_LaunchDarkly_Logging_ILogAdapterExtensions">ILogAdapterExtensions Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_LaunchDarkly_Logging_LogCapture.htm" title="LogCapture Class" tocid="T_LaunchDarkly_Logging_LogCapture">LogCapture Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_LaunchDarkly_Logging_LogCapture_Message.htm" title="LogCapture.Message Structure" tocid="T_LaunchDarkly_Logging_LogCapture_Message">LogCapture.Message Structure</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_LaunchDarkly_Logging_Logger.htm" title="Logger Class" tocid="T_LaunchDarkly_Logging_Logger">Logger Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_LaunchDarkly_Logging_LogLevel.htm" title="LogLevel Enumeration" tocid="T_LaunchDarkly_Logging_LogLevel">LogLevel Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_LaunchDarkly_Logging_Logs.htm" title="Logs Class" tocid="T_LaunchDarkly_Logging_Logs">Logs Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_LaunchDarkly_Logging_LogValues.htm" title="LogValues Class" tocid="T_LaunchDarkly_Logging_LogValues">LogValues Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_LaunchDarkly_Logging_SimpleLogging.htm" title="SimpleLogging Class" tocid="T_LaunchDarkly_Logging_SimpleLogging">SimpleLogging Class</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>LaunchDarkly.Logging Namespace</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
             A simple pluggable logging framework.
             </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Classes</span></div><div id="ID0RBSection" class="collapsibleSection"><table class="members" id="classList"><tr><th class="iconColumn">
					 
				</th><th>Class</th><th>Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_LaunchDarkly_Logging_Extensions.htm">Extensions</a></td><td><div class="summary">
            Extension methods for convenience in implementing log adapters.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_LaunchDarkly_Logging_ILogAdapterExtensions.htm">ILogAdapterExtensions</a></td><td><div class="summary">
            Extension methods that can be applied to any <a href="T_LaunchDarkly_Logging_ILogAdapter.htm">ILogAdapter</a>.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="T_LaunchDarkly_Logging_LogCapture.htm">LogCapture</a></td><td><div class="summary">
            A mechanism for capturing logger output in memory.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_LaunchDarkly_Logging_Logger.htm">Logger</a></td><td><div class="summary">
            A basic logger facade that delegates to an underlying output implementation.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_LaunchDarkly_Logging_Logs.htm">Logs</a></td><td><div class="summary">
            Factory methods for the basic logging implementations in this package.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_LaunchDarkly_Logging_LogValues.htm">LogValues</a></td><td><div class="summary">
            Helper methods for logging special variables.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_LaunchDarkly_Logging_SimpleLogging.htm">SimpleLogging</a></td><td><div class="summary">
            A basic logging implementation that sends preformatted output one line at a time
            to a <a href="https://docs.microsoft.com/dotnet/api/system.io.textwriter" target="_blank">TextWriter</a>, or to any arbitrary output function.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Structures</span></div><div id="ID1RBSection" class="collapsibleSection"><table class="members" id="structureList"><tr><th class="iconColumn">
					 
				</th><th>Structure</th><th>Description</th></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_LaunchDarkly_Logging_LogCapture_Message.htm">LogCapture<span id="LSTBF26B5B9_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBF26B5B9_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Message</a></td><td><div class="summary">
            Information about a captured log message.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Interfaces</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="interfaceList"><tr><th class="iconColumn">
					 
				</th><th>Interface</th><th>Description</th></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_LaunchDarkly_Logging_IChannel.htm">IChannel</a></td><td><div class="summary">
            The underlying implementation object used by some <a href="T_LaunchDarkly_Logging_Logger.htm">Logger</a> instance.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_LaunchDarkly_Logging_ILogAdapter.htm">ILogAdapter</a></td><td><div class="summary">
            An abstraction of some mechanism for producing log output.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Enumerations</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="enumerationList"><tr><th class="iconColumn">
					 
				</th><th>Enumeration</th><th>Description</th></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_LaunchDarkly_Logging_LogLevel.htm">LogLevel</a></td><td><div class="summary">
            Enumeration of the logging levels defined by the LaunchDarkly.Logging abstraction.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID4RBSection" class="collapsibleSection"><p><span class="code">LaunchDarkly.Logging</span>provides a simple logging abstraction that is used by other
             LaunchDarkly .NET packages, including the LaunchDarkly .NET SDK and Xamarin SDK. It includes
             built-in implementations for basic logging (see <a href="T_LaunchDarkly_Logging_Logs.htm">Logs</a>), and can
             also be connected to other logging frameworks with a simple adapter interface. It does not deal
             with administrative tasks such as rotating log files; the assumption is that those would be set up
             at an OS level or by an application framework.
             </p><p>
             The reason for this indirect approach to logging is that LaunchDarkly tools can run on a variety
             of .NET platforms, including .NET Core, .NET Framework, and Xamarin. There is no single logging
             framework that is consistently favored across all of those. For instance, the standard in .NET
             Core is now <span class="code">Microsoft.Extensions.Logging</span>, but in .NET Framework 4.5.x this is not available
             without bringing in .NET Core assemblies that are normally not used in .NET Framework.
             </p><p>
             Earlier versions of LaunchDarkly SDKs used the <span class="code">Common.Logging</span> framework, which provides
             adapters to various popular loggers. But writing the LaunchDarkly packages against such a
             third-party API causes inconvenience for any developer using LaunchDarkly who prefers a different
             framework, and it is a relatively heavyweight solution for projects that may have only simple logging
             requirements. This package, with its small feature set geared toward the needs of LaunchDarkly
             SDKs, aims to make the task of writing and maintaining logging adapters very straightforward, and
             to reduce the chance that a change in third-party APIs will cause backward incompatibillity.
             </p><p>    
             The example code below shows how to configure the LaunchDarkly server-side SDK for .NET to use some
             of the standard logging implementations. For more examples of how to specify a logging implementation
             when using the LaunchDarkly SDKs or other libraries, consult the documentation for those libraries.
             Each library may have its own rules for what the default logging implementation is if you don't
             specify one.
             </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID5RBSection" class="collapsibleSection">
                 // In this configuration, logging goes to the standard output stream (Console.Out).
                 var config1 = Configuration.Builder("my-sdk-key")
                     .Logging(Components.Logging(Logs.ToStream(Console.Out)))
                     .Build();
            
                 // Same, but all logging below Warn level is suppressed.
                 var config2 = Configuration.Builder("my-sdk-key")
                     .Logging(Components.Logging(Logs.ToStream(Console.Out).Level(LogLevel.Warn)))
                     .Build();
            
                 // This configuration disables all logging.
                 var config3 = Configuration.Builder("my-sdk-key")
                     .Logging(Components.Logging(Logs.None))
                     .Build();
             </div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>